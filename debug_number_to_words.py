#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
from decimal import Decimal

sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def debug_number_to_words():
    """Debug h√†m number_to_words v·ªõi s·ªë l·ªõn"""
    print("üöÄ Debug h√†m number_to_words")
    print("=" * 50)
    
    try:
        from src.contract_generator import ContractGenerator
        
        # Kh·ªüi t·∫°o generator
        generator = ContractGenerator()
        
        # Test v·ªõi s·ªë nh·ªè tr∆∞·ªõc
        print("üìä Test s·ªë nh·ªè:")
        test_numbers = [1000, 10000, 100000, 1000000]
        for num in test_numbers:
            try:
                result = generator.number_to_words(num)
                print(f"   {num:,} ‚Üí {result}")
            except Exception as e:
                print(f"   ‚ùå {num:,} ‚Üí L·ªói: {e}")
        
        # Test v·ªõi s·ªë c·ªßa T√¢m Ho√†ng Thi·ªán
        print("\nüìä Test s·ªë c·ªßa T√¢m Ho√†ng Thi·ªán:")
        tam_contract_value = 12313132132213132.00
        print(f"   S·ªë g·ªëc: {tam_contract_value}")
        
        try:
            result = generator.number_to_words(tam_contract_value)
            print(f"   ‚úÖ K·∫øt qu·∫£: {result}")
        except Exception as e:
            print(f"   ‚ùå L·ªói: {e}")
            import traceback
            traceback.print_exc()
            
        # Test v·ªõi Decimal
        print("\nüìä Test v·ªõi Decimal:")
        try:
            decimal_value = Decimal(str(tam_contract_value))
            print(f"   Decimal: {decimal_value}")
            result = generator.number_to_words(float(decimal_value))
            print(f"   ‚úÖ K·∫øt qu·∫£: {result}")
        except Exception as e:
            print(f"   ‚ùå L·ªói: {e}")
            import traceback
            traceback.print_exc()
            
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_number_to_words() 